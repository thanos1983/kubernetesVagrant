---
- hosts: all
  become: true
  tasks:
    - name: Update all packages to their latest version
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: Install packages that allow apt to be used over HTTPS
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Add an apt signing key for kubernetes packages
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      ansible.builtin.apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Remove swapfile from /etc/fstab
      ansible.posix.mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      ansible.builtin.command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Install Kubernetes binaries
      ansible.builtin.apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl
          - containerd
      notify:
        - containerd status

    - name: Load the necessary modules for Containerd
      ansible.builtin.blockinfile:
        path: /etc/modules-load.d/containerd.conf
        create: yes
        block: |
          overlay
          br_netfilter

    - name: Extend kernel functionality for Containerd
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      with_items:
        - overlay
        - br_netfilter

    - name: Add kernel parameters
      ansible.posix.sysctl:
        sysctl_file: /etc/sysctl.d/99-kubernetes-cri.conf
        name: "{{ item }}"
        value: "1"
      with_items:
        - net.ipv4.ip_forward
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables

    - name: Create Containerd configuration directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: "0755"

    - name: Configure Containerd
      ansible.builtin.command: containerd config default | sudo tee /etc/containerd/config.toml

    - name: Configure systemd as cgroup driver
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]'
        insertafter: '\s+[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]'
        line: "  SystemdCgroup = true"
        create: yes
      notify:
        - containerd status

    - name: Configure node ip
      ansible.builtin.lineinfile:
        create: yes
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

    - name: Restart kubelet
      ansible.builtin.service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: Copy the join command to server location
      ansible.builtin.copy:
        src: join-command
        dest: /tmp/join-command.sh
        mode: "0777"

    - name: Join the node to cluster
      ansible.builtin.command: sh /tmp/join-command.sh

  handlers:
    - name: containerd status
      service:
        name: containerd
        state: started
