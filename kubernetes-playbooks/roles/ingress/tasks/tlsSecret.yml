---
# tasks file for roles/kubernetes tlsSecret
- name: Create secret for namespace "{{ kubeadm.clusterRoleUser.namespace }}"
  kubernetes.core.k8s:
    state: "{{ secretState | default('present') }}"
    kubeconfig: "{{ playbook_dir }}/.kube/config"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "secret-{{ kubeadm.clusterRoleUser.namespace }}"
        namespace: "{{ kubeadm.clusterRoleUser.namespace }}"
      data:
        tls.crt: "{{ lookup('file', '{{ role_path }}/files/{{ ingress.certfiles.crt }}') | b64encode }}"
        tls.key: "{{ lookup('file', '{{ role_path }}/files/{{ ingress.certfiles.key }}') | b64encode }}"
      type: kubernetes.io/tls
  no_log: true

- name: Create ConfigMap for namespace "{{ kubeadm.clusterRoleUser.namespace }}"
  kubernetes.core.k8s:
    state: "{{ configMapState | default('present') }}"
    kubeconfig: "{{ playbook_dir }}/.kube/config"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "configmap-{{ kubeadm.clusterRoleUser.namespace }}"
        namespace: "{{ kubeadm.clusterRoleUser.namespace }}"
      data:
        ssl-protocols: "TLSv1.2 TLSv1.3"
        ssl-certificate: "secret-{{ kubeadm.clusterRoleUser.namespace }}"
        ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA"
