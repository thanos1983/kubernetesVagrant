---
# tasks file for roles/kubernetes haproxyIngressHttps
- name: Ingress deployment with '{{ kubernetesConfigurations.ingressController }}' at '{{ ingress.metadata.namespace }}' namespace
  kubernetes.core.k8s:
    state: "{{ ingressState | default('present') }}"
    kubeconfig: "{{ playbook_dir }}/.kube/config"
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: "{{ ingress.metadata.name }}"
        namespace: "{{ ingress.metadata.namespace }}"
        annotations:
          haproxy.org/path-rewrite: "/"
          haproxy.org/server-ssl: "false"
        labels:
          app.kubernetes.io/name: "{{ ingress.metadata.labels.name }}"
          app.kubernetes.io/instance: "{{ ingress.metadata.labels.instance }}"
          app.kubernetes.io/version: "{{ ingress.metadata.labels.version }}"
          app.kubernetes.io/component: "{{ ingress.metadata.labels.component }}"
          app.kubernetes.io/managed-by: "{{ ingress.metadata.labels.managed_by }}"
      spec: "{{ spec | from_yaml }}"
  vars:
    spec: |
      tls:
      - hosts:
          - "{{ ingress.spec.tls.hosts }}"
        secretName: "secret-{{ kubeadm.clusterRoleUser.namespace }}"
      rules:
      - host: "{{ ingress.spec.rules.host }}"
        http:
          paths:
          - path: "{{ ingress.spec.rules.http.paths.path }}"
            pathType: "{{ ingress.spec.rules.http.paths.pathType }}"
            backend:
              service:
                name: "{{ ingress.spec.rules.http.paths.backend.service.name }}"
                port:
                  number: {{ ingress.spec.rules.http.paths.backend.service.port.number }}
