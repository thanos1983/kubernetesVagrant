apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: {{ node_ip }}
  bindPort: 6443
nodeRegistration:
  criSocket: {{ kubernetes.socket[kubernetesConfigurations.socket] }}
  name: node
  taints: null
---
apiServer:
  timeoutFoirControlPlane: 2m0s
  extraArgs:
    authorization-mode: Node,RBAC
    insecure-port: "0"
  certSANs:
  - {{ ansible_hostname }}
{% for ind in range(0, ( number_of_nodes )) %}
  - {{ node_ip | ipmath(ind) }}
{% if ind != 0 %}
  - k8s-client-{{ ind }}
{% endif %}
{% endfor %}
apiVersion: kubeadm.k8s.io/v1beta3
certificatesDir: /etc/kubernetes/pki
clusterName: kubernetes
controllerManager: {}
dns:
  type: CoreDNS
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: k8s.gcr.io
kind: ClusterConfiguration
kubernetesVersion: {{ kubernetesConfigurations.version.major }}.{{ kubernetesConfigurations.version.minor }}
networking:
  dnsDomain: cluster.local
  podSubnet: {{ kubernetes.networkElement[kubernetesConfigurations.networkElement].range }}
  serviceSubnet: 10.96.0.0/12
scheduler: {}
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
imageGCLowThresholdPercent: 80
imageGCHighThresholdPercent: 85
cgroupDriver: systemd
