---
# tasks file for roles/kubernetesCore deployVolumes
- name: Pod deployment in Namespace '{{ deployment.metadata.namespace }}'
  kubernetes.core.k8s:
    state: "{{ deploymentState | default('present') }}"
    kubeconfig: "{{ playbook_dir }}/.kube/config"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: "{{ deployment.metadata.name }}"
        namespace: "{{ deployment.metadata.namespace }}"
        labels:
          app.kubernetes.io/name: "{{ deployment.metadata.labels.name }}"
          app.kubernetes.io/instance: "{{ deployment.metadata.labels.instance }}"
          app.kubernetes.io/version: "{{ deployment.metadata.labels.version }}"
          app.kubernetes.io/component: "{{ deployment.metadata.labels.component }}"
          app.kubernetes.io/managed-by: "{{ deployment.metadata.labels.managed_by }}"
          app.kubernetes.io/created-by: "{{ deployment.metadata.labels.created_by }}"
      spec: "{{ spec | from_yaml }}"
  vars:
    spec: |
      replicas: {{ deployment.spec.replicas }}
      selector:
        matchLabels:
          app.kubernetes.io/name: "{{ deployment.spec.selector.matchLabels.name }}"
          app.kubernetes.io/instance: "{{ deployment.spec.selector.matchLabels.instance }}"
          app.kubernetes.io/component: "{{ deployment.spec.selector.matchLabels.component }}"
      revisionHistoryLimit: {{ deployment.spec.revisionHistoryLimit }}
      minReadySeconds: {{ deployment.spec.minReadySeconds }}
      template:
        metadata:
          labels:
            app.kubernetes.io/name: "{{ deployment.spec.selector.matchLabels.name }}"
            app.kubernetes.io/instance: "{{ deployment.spec.selector.matchLabels.instance }}"
            app.kubernetes.io/component: "{{ deployment.spec.selector.matchLabels.component }}"
        spec:
          containers:
          - name: "{{ deployment.spec.template.spec.containers.name }}"
            image: "{{ deployment.spec.template.spec.containers.image }}"
            imagePullPolicy: "{{ deployment.spec.template.spec.containers.imagePullPolicy }}"
            ports:
            - containerPort: {{ deployment.spec.template.spec.containers.ports.containerPort }}
            volumeMounts:
            - name: "{{ deployment.spec.template.spec.containers.volumeMounts.name }}"
              mountPath: "{{ deployment.spec.template.spec.containers.volumeMounts.mountPath }}"
          imagePullSecrets:
          - name: "{{ deployment.spec.template.spec.containers.imagePullSecrets.name }}"
          volumes:
          - name: "{{ deployment.spec.template.spec.volumes.name }}"
            configMap:
              name: "{{ deployment.spec.template.spec.volumes.configMap.name }}"
