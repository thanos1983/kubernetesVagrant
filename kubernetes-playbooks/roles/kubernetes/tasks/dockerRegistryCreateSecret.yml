---
# tasks file for roles/kubernetes dockerRegistryCreateSecret
- name: Create encoded dockerconfigjson auth parameter
  ansible.builtin.set_fact:
    encodedDockerConfigiJsonAuth: "{{ lookup('template', 'dockerConfigJsonAuth.j2') | trim | b64encode }}"

- debug:
    msg: "{{ encodedDockerConfigiJsonAuth }}"

- name: Create dockerconfigjson with the rest of the vars
  ansible.builtin.set_fact:
    encodedDockerConfigJson: "{{ lookup('template', 'dockerConfigJson.j2') | to_json | b64encode }}"

- name: Create secret for Docker Registry if does not exist on namespace '{{ kubeadm.cluster.namespace }}'
  community.kubernetes.k8s:
    state: present
    template: "dockerRegistrySecret.yml.j2"
    kubeconfig: "{{ playbook_dir }}/.kube/config"
  # tags: [ never ]

- name: Get Secret '{{ kubernetesDockerRegistrySecret.name }}' from namespace '{{ kubeadm.cluster.namespace }}' if exists
  community.kubernetes.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ kubernetesDockerRegistrySecret.name }}"
    namespace: "{{ kubeadm.cluster.namespace }}"
    kubeconfig: "{{ playbook_dir }}/.kube/config"
  register: dockerRegistrySecret
  tags: [ never ]

- name: Create secret for Docker Registry if does not exist on namespace '{{ kubeadm.cluster.namespace }}'
  ansible.builtin.shell:
    cmd: |
      kubectl --kubeconfig {{ playbook_dir }}/.kube/config \
      create secret docker-registry "{{ kubernetesDockerRegistrySecret.name }}" \
      --namespace="{{ kubeadm.cluster.namespace | default('default') }}" \
      --docker-server="{{ repo.registry }}" \
      --docker-username="{{ vaultData.username }}" \
      --docker-password="{{ vaultData.password }}" \
      --docker-email="{{ cert.email_address }}"
  when: dockerRegistrySecret.resources | length == 0
  tags: [ never ]

- name: Check if secret named '{{ kubernetesDockerRegistrySecret.name }}' exists in namespace '{{ kubeadm.cluster.namespace }}' if not create it
  block:
    - name: Check if secret named '{{ kubernetesDockerRegistrySecret.name }}' exists in namespace '{{ kubeadm.cluster.namespace }}'
      ansible.builtin.shell:
        cmd: |
          kubectl --kubeconfig {{ playbook_dir }}/.kube/config \
          get secret "{{ kubernetesDockerRegistrySecret.name }}" \
          --namespace="{{ kubeadm.cluster.namespace | default('default') }}"
  rescue:
    - name: Create secret for Docker Registry if does not exist on namespace '{{ kubeadm.cluster.namespace }}'
      ansible.builtin.shell:
        cmd: |
          kubectl --kubeconfig {{ playbook_dir }}/.kube/config \
          create secret docker-registry "{{ kubernetesDockerRegistrySecret.name }}" \
          --namespace="{{ kubeadm.cluster.namespace | default('default') }}" \
          --docker-server="{{ repo.registry }}" \
          --docker-username="{{ vaultData.username }}" \
          --docker-password="{{ vaultData.password }}" \
          --docker-email="{{ cert.email_address }}"
  tags: [ never ]
