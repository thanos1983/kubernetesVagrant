---
# vars file for roles/sampleContainerDeployProcess
app: 'webserver' # low case
version: 'v0.0.1'
component: 'frontend'
managed_by: 'k8s'

kubernetesDockerRegistrySecret:
  name: 'regcred'

ports:
  http: '30080'
  https: '30443'

domain:
  urlPrefix: 'https'
  url: '{{ app }}.my.k8s.cluster.com' # do not modify
  validation_content: 'Welcome to nginx!' # case sensitive

cert:
  validation:
    http: 'no' # due to no CA we need to disable it 
    https: 'no' # due to self signed CA we need to disable it 
  country_name: DK
  email_address: garyfalos@cpan.org
  organization_name: JustForFun

kubeadm:
  cluster:
    namespace: 'demo'

deploy:
  imageTag: '0.0.1'
  containerPort: '80'
  name: 'my_nginx_sample'
  stage: '{{ env_variable }}'

image:
  tag: '{{ deploy.imageTag }}'
  name: '{{ repo.registry }}/{{ deploy.name }}'

deployment:
  metadata:
    name: 'deployment-{{ app }}'
    namespace: '{{ kubeadm.cluster.namespace }}'
    labels:
      name: '{{ app }}'
      instance: '{{ app }}'
      version: '{{ version }}'
      component: '{{ component }}'
      managed_by: '{{ managed_by }}'
  spec:
    replicas: '1'
    selector:
      matchLabels:
        name: '{{ app }}' 
        instance: '{{ app }}'
        component: '{{ component }}'
    revisionHistoryLimit: 3
    minReadySeconds: 0
    template:
      metadata:
        labels:
          name: '{{ app }}'
          instance: '{{ app }}'
          component: '{{ component }}'
      spec:
        containers:
          name: '{{ app }}'
          image: '{{ image.name }}:{{ image.tag }}'
          imagePullPolicy: 'IfNotPresent'
          ports:
            containerPort: 80
          imagePullSecrets:
            name: "{{ kubernetesDockerRegistrySecret.name }}"

service:
  metadata:
    name: 'service-{{ app }}'
    namespace: '{{ kubeadm.cluster.namespace }}'
    labels:
      name: '{{ app }}'
      instance: '{{ app }}'
      version: '{{ version }}'
      component: '{{ component }}'
      managed_by: '{{ managed_by }}'
  spec:
    selector:
      name: '{{ app }}'
      instance: '{{ app }}'
      component: '{{ component }}'
    ports:
      name: 'http'
      port: 80
      targetPort: 80
    type: 'ClusterIP'

ingress:
  metadata:
    name: 'ingress-{{ app }}'
    namespace: '{{ kubeadm.cluster.namespace }}'
    labels:
      name: '{{ app }}'
      instance: '{{ app }}'
      version: '{{ version }}'
      component: '{{ component }}'
      managed_by: '{{ managed_by }}'
  spec:
    defaultBackend:
      service:
        name: '{{ service.metadata.name }}'
        port:
          number: 80
    tls:
      hosts: '{{ domain.url }}'
    rules:
      host: '{{ domain.url }}'
      http:
        paths:
          path: '/'
          pathType: 'Prefix'
          backend: 
            service: 
              name: '{{ service.metadata.name }}'
              port:
                number: 80
  certfiles:
    key: 'sample.pem'
    csr: 'sample.csr'
    crt: 'sample.crt'
